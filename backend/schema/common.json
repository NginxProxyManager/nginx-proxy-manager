{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "common",
	"type": "object",
	"properties": {
		"id": {
			"description": "Unique identifier",
			"readOnly": true,
			"type": "integer",
			"minimum": 1
		},
		"expand": {
			"anyOf": [
				{
					"type": "null"
				},
				{
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "string"
					}
				}
			]
		},
		"query": {
			"anyOf": [
				{
					"type": "null"
				},
				{
					"type": "string",
					"minLength": 1,
					"maxLength": 255
				}
			]
		},
		"created_on": {
			"description": "Date and time of creation",
			"readOnly": true,
			"type": "string"
		},
		"modified_on": {
			"description": "Date and time of last update",
			"readOnly": true,
			"type": "string"
		},
		"user_id": {
			"description": "User ID",
			"type": "integer",
			"minimum": 1
		},
		"certificate_id": {
			"description": "Certificate ID",
			"anyOf": [
				{
					"type": "integer",
					"minimum": 0
				},
				{
					"type": "string",
					"pattern": "^new$"
				}
			]
		},
		"access_list_id": {
			"description": "Access List ID",
			"type": "integer",
			"minimum": 0
		},
		"access_directive": {
			"type": "string",
			"enum": ["allow", "deny"]
		},
		"access_address": {
			"oneOf": [
				{
					"type": "string",
					"pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$"
				},
				{
					"type": "string",
					"pattern": "^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
				},
				{
					"type": "string",
					"pattern": "^all$"
				}
			]
		},
		"authorization_username": {
			"type": "string",
			"minLength": 1
		},
		"authorization_password": {
			"type": "string",
			"minLength": 1
		},
		"authorization_hint": {
			"type": "string",
			"minLength": 1
		},
		"domain_names": {
			"description": "Domain Names separated by a comma",
			"type": "array",
			"minItems": 1,
			"maxItems": 100,
			"uniqueItems": true,
			"items": {
				"type": "string",
				"pattern": "^[^&| @!#%^();:/\\\\}{=+?<>,~`'\"]+$"
			}
		},
		"enabled": {
			"description": "Is Enabled",
			"type": "boolean"
		},
		"ssl_forced": {
			"description": "Is SSL Forced",
			"type": "boolean"
		},
		"hsts_enabled": {
			"description": "Is HSTS Enabled",
			"type": "boolean"
		},
		"hsts_subdomains": {
			"description": "Is HSTS applicable to all subdomains",
			"type": "boolean"
		},
		"ssl_provider": {
			"type": "string",
			"pattern": "^(letsencrypt|other)$"
		},
		"http2_support": {
			"description": "HTTP2 Protocol Support",
			"type": "boolean"
		},
		"block_exploits": {
			"description": "Should we block common exploits",
			"type": "boolean"
		},
		"caching_enabled": {
			"description": "Should we cache assets",
			"type": "boolean"
		}
	}
}
